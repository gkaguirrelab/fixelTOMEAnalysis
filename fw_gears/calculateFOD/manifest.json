{
	"name": "calculate-fod",
	"label": "calculateFOD: Make FOD image from HCP-diff output",
	"description": "This gear uses multi-shell HCP-diff output archive to calculate FOD images. The details of MRtrix spherical deconvolution method can be found here: mrtrix.readthedocs.io. If you use the adaptive convex optimization method please cite the following paper: Tran, G., & Shi, Y. (2015). Fiber orientation and compartment parameter estimation from multi-shell diffusion imaging. IEEE Transactions on Medical Imaging, 34(11), 2320–2332."
	"author": "Ozenc Taskin",
	"maintainer": "Ozenc Taskin <huseyinozenc.taskin@pennmedicine.upenn.edu>",
	"source": "https://www.mrtrix.org/, Tran, G., & Shi, Y. (2015). Fiber orientation and compartment parameter estimation from multi-shell diffusion imaging. IEEE Transactions on Medical Imaging, 34(11), 2320–2332.",
	"url": "https://github.com/gkaguirrelab/fixelTOMEAnalysis/fw_gears/calculateFOD",
	"version": "0.1.0",
	"custom": {
		"flywheel": {
			"suite": "GKAguirreLab"
		}
	},
	"license": "Other",
	"config": {
		“convexOpt.BValLowTHD”:  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.BValHighTHD":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.SPHMaxOrder":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.MinNumConstraint":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.NumOptiSteps":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.init_xi":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.xi_stepsize":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.xi_NumSteps":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.MaxNumFiberCrossingPerVoxel":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.UniformityFlag":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.NoiseFloor":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		"convexOpt.SPH_Coef_Nifti":  {
  			"description": "Voxel size. If the images are isotropic, enter a single number. Otherwise, comma separate the values (e.g 1.25, 1.25, 1.50)",
  			"type": "string"
		},
		“mrTrix.lmax”:  {
  			"description": "the maximum spherical harmonic order for the output FOD(s).For algorithms with multiple outputs, this should be provided as a comma-separated list of integers, one for each output image; for single-output algorithms, only a single integer should be provided. If omitted, the command will use the lmax of the corresponding response function (i.e based on its number of coefficients), up to a maximum of 8.
",
  			"type": "string”,
			“default: “8,8,8”
		},
		“method”:  {
  			"description": “Method to use for FOD creation",
  			"type": "string”,
			"enum": [
				“MRtrix sphericalDec”,
				“Adaptive Convex Optimization (Tran & Shi, 2015)”,
			]
		}
	},
	"inputs": {
		“hcp_diff_archive”: {
			"description": “HCP-diff archive that contains preprocessed HCP images.”,
			"base": "file",
			"optional": false
		},
		“response_wm”: {
			"description": “White matter response function. Use this if you are using a unique function. If empty it will be calculated from the data”,
			"base": "file",
			"optional": true
		},
		“response_gm”: {
			"description": “Gray matter response function. Use this if you are using a unique function. If empty it will be calculated from the data”,
			"base": "file",
			"optional": true
		},
		“response_csf”: {
			"description": “CSF response function. Use this if you are using a unique function. If empty it will be calculated from the data”,
			"base": "file",
			"optional": true
		}
	}
}
