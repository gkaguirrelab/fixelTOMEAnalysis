#!/usr/bin/python3.5

import os
import json
from fixelAnalysis import fixelAnalysis

# Print the system specs in the log file
os.system('cat /proc/cpuinfo')

# Set initial Flywheel paths
flywheel_base ='/flywheel/v0/'
manifest_file = os.path.join(flywheel_base, 'manifest.json')
config_path = os.path.join(flywheel_base, 'config.json')
first_output_dir = '/firstOutput' # Working in the flywheel output folder might cause issues so creating a first level output folder 
os.system('mkdir %s'%first_output_dir)
final_output_dir = os.path.join(flywheel_base, 'output')

# Set paths to the tools 
mrtrix_path = '/mrtrix3/bin/' #path to mrtrix bin

###################Parse Config Here###########################################

with open(config_path) as config_file:
    job_config = json.load(config_file)
config = job_config['config']

fmls_peak_value = config['fmls_peak_value']
track_density_thresh = config['track_density_thresh']
save_intermediate_files = config['save_intermediate_files']

################### Input Files ###############################################

fod_list = []
mask_list = []

# Find the images and put the paths into fod/mask python lists
for i in range(45):
    image_number = i+1  
    if image_number < 10: 
        image_number_string = '0' + str(image_number)
    else:
        image_number_string = str(image_number)  
   
    image_path_and_name = os.path.join(flywheel_base, 'input', 'fodImage%s' % image_number_string) 
    if os.path.exists(image_path_and_name):
        image = os.path.join(image_path_and_name, os.listdir(image_path_and_name)[0])
        fod_list.append(image)
    mask_path_and_name = os.path.join(flywheel_base, 'input', 'maskImage%s' % image_number_string) 
    if os.path.exists(mask_path_and_name):    
        mask = os.path.join(mask_path_and_name, os.listdir(mask_path_and_name)[0]) 
        mask_list.append(mask)

# Get the other input 
left_roi_path = os.path.join(flywheel_base, 'input', 'leftROI')
left_roi = os.path.join(left_roi_path, os.listdir(left_roi_path)[0])
right_roi_path = os.path.join(flywheel_base, 'input', 'rightROI')
right_roi = os.path.join(right_roi_path, os.listdir(right_roi_path)[0])
template_path = os.path.join(flywheel_base, 'input', 'fodTemplate')
template = os.path.join(template_path, os.listdir(template_path)[0])

#################### Run Func #################################################

fixelAnalysis(mrtrix_path, first_output_dir, final_output_dir, fod_list, mask_list, template, left_roi, right_roi, fmls_peak_value, track_density_thresh)

# Save intermediate files if requested
if save_intermediate_files == True:
    os.system('cd %s; zip -r %s *' % (first_output_dir, os.path.join(final_output_dir, 'intermediate_files.zip')))