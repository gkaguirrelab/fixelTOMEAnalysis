#!/anaconda3/bin/python3

import os
import json
from construct_optic_radiations import construct_optic_radiations

# Set initial Flywheel paths
flywheel_base ='/flywheel/v0/'
manifest_file = os.path.join(flywheel_base, 'manifest.json')
config_path = os.path.join(flywheel_base, 'config.json')
first_output_dir = '/firstOutput' # Working in the flywheel output folder might cause issues so creating a first level output folder 
os.system('mkdir %s'%first_output_dir)
final_output_dir = os.path.join(flywheel_base, 'output')

# Set paths to the tools 
trekker_bin = '/trekker/build/Linux/' #path to trekker
mrtrix_path = '/mrtrix3/bin/' #path to mrtrix bin
freesurfer_environment_path = 'export FREESURFER_HOME=/freesurfer;export SUBJECTS_DIR=/freesurfer/subjects/; export PATH="$FREESURFER_HOME/bin:$PATH"; export PATH="$SUBJECTS_DIR:$PATH";/freesurfer/bin'
fsl_path = 'FSLDIR=/fsl/;. ${FSLDIR}/etc/fslconf/fsl.sh;PATH=${FSLDIR}:${PATH};export FSLDIR PATH;/fsl/bin/'
ants_path = '/usr/lib/ants/'
###################Parse Config Here###########################################

with open(config_path) as config_file:
    job_config = json.load(config_file)

config = job_config['config']

minFODamp = config['minFODamp']
trackDensityThreshold = config['trackDensityThreshold']
numTracks = config['numTracks']
################### Input Files ###############################################

# paths to inputs
hcpStructArchive_path = os.path.join(flywheel_base, 'input/hcpStructArchive')
reconAllOutput_path = os.path.join(flywheel_base, 'input/reconAllOutput')
bayesianPRFOutput_path = os.path.join(flywheel_base, 'input/bayesianPRFOutput')
subthalamicSegmentationOutput_path = os.path.join(flywheel_base, 'input/subthalamicSegmentationOutput')
subjectFOD_path = os.path.join(flywheel_base, 'input/subjectFOD')
templateFOD_path = os.path.join(flywheel_base, 'input/templateFOD')
calculateFixelIntermediateArchive_path = os.path.join(flywheel_base, 'input/calculateFixelIntermediateArchive')

# Get input files 
hcpStructArchive = os.path.join(hcpStructArchive_path, os.listdir(hcpStructArchive_path)[0])
reconAllOutput = os.path.join(reconAllOutput_path, os.listdir(reconAllOutput_path)[0])
bayesianPRFOutput = os.path.join(bayesianPRFOutput_path, os.listdir(bayesianPRFOutput_path)[0])
subthalamicSegmentationOutput = os.path.join(subthalamicSegmentationOutput_path, os.listdir(subthalamicSegmentationOutput_path)[0])
subjectFOD = os.path.join(subjectFOD_path, os.listdir(subjectFOD_path)[0])
templateFOD = os.path.join(templateFOD_path, os.listdir(templateFOD_path)[0])
calculateFixelIntermediateArchive = os.path.join(calculateFixelIntermediateArchive_path, os.listdir(calculateFixelIntermediateArchive_path)[0])

#################### Process #################################################

construct_optic_radiations(hcpStructArchive, reconAllOutput, bayesianPRFOutput, subthalamicSegmentationOutput, 
                           subjectFOD, templateFOD, calculateFixelIntermediateArchive, first_output_dir, final_output_dir, 
                           minFODamp = minFODamp, track_density_thresh = trackDensityThreshold, numTracks=numTracks,
                           freesurfer_path=freesurfer_environment_path, ants_path=ants_path, fsl_path=fsl_path, mrtrix_path=mrtrix_path, trekker_path=trekker_bin)

